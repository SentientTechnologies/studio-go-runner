FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu16.04

RUN apt-get update && \
    apt-get install -y locales && \
    apt-get install -y language-pack-en && \
    update-locale "en_US.UTF-8" && \
    apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl curl && \
    apt-get install -y  --no-install-recommends git lshw

RUN apt-get install -y --no-install-recommends \
        cuda-nvrtc-8-0=8.0.61-1 \
        cuda-nvgraph-8-0=8.0.61-1 \
        cuda-cusolver-8-0=8.0.61-1 \
        cuda-cublas-8-0=8.0.61.2-1 \
        cuda-cufft-8-0=8.0.61-1 \
        cuda-curand-8-0=8.0.61-1 \
        cuda-cusparse-8-0=8.0.61-1 \
        cuda-npp-8-0=8.0.61-1 \
        cuda-cudart-8-0=8.0.61-1

RUN apt-get install -y --no-install-recommends \
        cuda-cudart-9-0=9.0.176-1 \
        cuda-command-line-tools-9-0 \
        cuda-cufft-9-0 \
        cuda-curand-9-0 \
        cuda-cusolver-9-0 \
        cuda-cusparse-9-0 \
        cuda-libraries-9-0=9.0.176-1 \
        cuda-cublas-9-0=9.0.176.3-1

RUN apt-get install -y --no-install-recommends \
        cuda-cudart-10-0=10.0.130-1 \
        cuda-cufft-10-0 \
        cuda-curand-10-0 \
        cuda-cusolver-10-0 \
        cuda-cusparse-10-0 \
        cuda-libraries-10-0=10.0.130-1 \
        cuda-cublas-10-0=10.0.130-1

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=10.0"

RUN apt-get -y update && apt-get install -y --no-install-recommends \
        pkg-config \
        software-properties-common \
        unzip && \
    apt-get -y update

# Pick up some TF dependencies
RUN apt-get install -y --no-install-recommends \
        build-essential \
        libcudnn5=5.1.10-1+cuda8.0 \
        libcudnn6=6.0.21-1+cuda8.0 \
        libhdf5-serial-dev \
        libpng12-dev \
        libzmq3-dev && \
    apt-get clean

RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get -y update && \
    apt-get -y install --no-install-recommends python python-dev python3.6 python3.6-dev

RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python get-pip.py pip==19.0.3 setuptools==44.0.0 wheel==0.33.6 && \
    python3 get-pip.py pip==19.0.3 setuptools==44.0.0 wheel==0.33.6

RUN pip3 install tensorflow-gpu==1.12.0 && \
    pip3 install tensorflow-gpu==1.13.1 && \
    pip3 install tensorflow-gpu==1.14.0 && \
    pip install virtualenv==15.2.0 --force-reinstall && \
    pip install virtualenv==15.2.0 --force-reinstall && \
    pip install opencv-python-headless && \
    pip3 install opencv-python-headless && \
    apt-get clean

RUN mkdir -p /runner/certs/aws-sqs
WORKDIR /runner

# Enable the ability to debug in-situ for python tasks
# RUN echo 0 | tee /proc/sys/kernel/yama/ptrace_scope

# Done last to prevent lots of disruption when bumping versions
LABEL vendor="Sentient Technologies INC" \
      ai.sentient.module.version=<repo-version></repo-version> \
      ai.sentient.module.name=studio-go-runner

# Add support for richer terminals to aid debugging etc
RUN mkdir -p /lib/terminfo/x && \
    mkdir -p /usr/local/share/terminfo/x
COPY add-ons/termite.terminfo /usr/local/share/terminfo/x/xterm-termite
COPY add-ons/termite.terminfo /lib/terminfo/x/xterm-termite

# Prometheus instrumented port
EXPOSE 9090

ENV NVIDIA_REQUIRE_CUDA=cuda>=10.0

COPY run.sh /runner/run.sh
COPY bin/runner-linux-amd64 /runner/runner-linux-amd64
COPY bin/runner-linux-amd64-cpu /runner/runner-linux-amd64-cpu

CMD /bin/bash -C ./run.sh
