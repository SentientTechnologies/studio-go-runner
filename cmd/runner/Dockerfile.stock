# Copyright 2018-2021 (c) Cognizant Digital Business, Evolutionary AI. All rights reserved. Issued under the Apache 2.0 License.
#
FROM nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
    apt-get install -y locales && \
    apt-get install -y language-pack-en && \
    update-locale "en_US.UTF-8" && \
    apt-get install -y --no-install-recommends ca-certificates apt-transport-https apt-utils && \
    apt-get install -y --no-install-recommends wget curl lshw jq htop vim pkg-config unzip && \
    apt-get install -y --no-install-recommends libopenblas-base && \
    apt-get -y upgrade && \
    apt-get clean

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=11.0"

RUN apt-get -y update && apt-get install -y --no-install-recommends \
        pkg-config \
        software-properties-common \
        unzip && \
    apt-get -y update

# Pick up some TF dependencies
RUN apt-get install -y --no-install-recommends \
        build-essential \
        libhdf5-serial-dev \
        libpng-dev \
        libzmq3-dev && \
    apt-get clean

RUN apt-get install -y make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev \
    libncursesw5-dev xz-utils libffi-dev liblzma-dev python-openssl

WORKDIR /runner

ENV HOME /runner
ENV PATH $HOME/.pyenv/bin:$PATH

RUN apt-get install -y --no-install-recommends git && \
    curl https://pyenv.run | /bin/bash && \
    export PATH=$HOME/.pyenv/bin:$PATH && \
    echo "export PATH=\"$HOME/.pyenv/bin:$PATH\"" >> $HOME/.bashrc && \
    echo "eval \"\$(pyenv init -)\"" >> $HOME/.bashrc && \
    echo "eval \"\$(pyenv virtualenv-init -)\"" >> $HOME/.bashrc && \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    pyenv install --list | grep " 3\.[5678]" && \
    pyenv install 3.8.6 && \
    pyenv install 3.7.9 && \
    pyenv install 3.6.12 && \
    pyenv install 3.5.9 && \
    pyenv global 3.6.12

RUN \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3 get-pip.py pip==19.0.3 setuptools==44.0.0 wheel==0.33.6

RUN \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    python3 -m pip install tensorflow-gpu==1.15.2 && \
    python3 -m pip install tensorflow-gpu==2.4.0 && \
    python3 -m pip install virtualenv==15.2.0 --force-reinstall && \
    python3 -m pip install opencv-python-headless && \
    apt-get clean

ENV KERAS_BACKEND tensorflow

RUN mkdir -p /runner/certs/aws-sqs
RUN mkdir -p /runner/certs/message

# Enable the ability to debug in-situ for python tasks
# RUN echo 0 | tee /proc/sys/kernel/yama/ptrace_scope

# Done last to prevent lots of disruption when bumping versions
LABEL vendor="Sentient Technologies INC" \
      ai.sentient.module.version=<repo-version></repo-version> \
      ai.sentient.module.name=studio-go-runner

# Add support for richer terminals to aid debugging etc
RUN mkdir -p /lib/terminfo/x && \
    mkdir -p /usr/local/share/terminfo/x
COPY add-ons/termite.terminfo /usr/local/share/terminfo/x/xterm-termite
COPY add-ons/termite.terminfo /lib/terminfo/x/xterm-termite

# Prometheus instrumented port
EXPOSE 9090

ENV NVIDIA_REQUIRE_CUDA=cuda>=11.0

COPY run.sh /runner/run.sh
COPY bin/runner-linux-amd64 /runner/runner-linux-amd64
COPY bin/runner-linux-amd64-cpu /runner/runner-linux-amd64-cpu

CMD /bin/bash -C ./run.sh
