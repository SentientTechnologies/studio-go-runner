---
apiVersion: v1
kind: Namespace
metadata:
  name: build-studio-go-runner
---
# The config map that is used to control the runners working state
apiVersion: v1
kind: ConfigMap
metadata:
  name: studioml-go-runner
  namespace: build-studio-go-runner
data:
  STATE: Running
---
# The following role allows the runner under test to interact with the working state config map
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: build-studio-go-runner
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# A github token secret that will be imported into the build namespace if it is present in the shell
# of the developer who is performing the build
apiVersion: v1
kind: Secret
metadata:
  name: studioml-runner-github-token
  namespace: build-studio-go-runner
type: Opaque
data:
  github_token: '{{ expandenv "$GITHUB_TOKEN" | b64enc }}'
---
# This config map is used to encapsulate the configuration for the runner
apiVersion: v1
kind: ConfigMap
metadata:
  name: build-env
  namespace: build-studio-go-runner
data:
 LOGXI_FORMAT: "happy,maxcol=1024"
 LOGXI: "*=DBG"
 GIT_BRANCH: "{{.duat.gitBranch}}"
 AMQP_URL: "amqp://guest:guest@${RABBITMQ_SERVICE_SERVICE_HOST}:${RABBITMQ_SERVICE_SERVICE_PORT}/%2f?connection_attempts=2&retry_delay=.5&socket_timeout=5"
---
# This service exposes rabbit MQ to the cluster members
apiVersion: v1
kind: Service
metadata:
  labels:
    component: rabbitmq
  name: rabbitmq-service
  namespace: build-studio-go-runner
spec:
  ports:
  - name: rmq-client
    port: 5672
  - name: rmq-admin
    port: 15672
  selector:
    app: taskQueue
    component: rabbitmq
---
# The replication controller encapsulates the pod(s) used to run RabbitMQ
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    component: rabbitmq
  name: rabbitmq-controller
  namespace: build-studio-go-runner
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: taskQueue
        component: rabbitmq
    spec:
      containers:
      - image: rabbitmq
        name: rabbitmq
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources:
          limits:
            cpu: 500m
        lifecycle:
          postStart:
            exec:
              command: 
                - "/bin/bash"
                - "-c"
                - >
                  set -euo pipefail ;
                  IFS=$'\n\t' ;
                  echo "Starting the install of the management plugin" ;
                  sleep 30 ;
                  rabbitmq-plugins enable rabbitmq_management ;
                  apt-get -y update ; apt-get install -y wget python ;
                  wget -q -O /usr/local/bin/rabbitmqadmin http://localhost:15672/cli/rabbitmqadmin ;
                  chmod +x /usr/local/bin/rabbitmqadmin

---
# This job starts a run to completion runner to perform the integration and end-to-end testing
apiVersion: batch/v1
kind: Job
metadata:
  name: build
  namespace: build-studio-go-runner
spec:
  template:
    spec:
      containers:
      - name: build
        env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: studioml-runner-github-token
                key: github_token
          - name: K8S_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: build-env
        image: {{ env "azure_registry_name" }}.azurecr.io/sentient.ai/{{.duat.module}}/standalone-build:{{.duat.gitBranch | replace "_" "-" | replace "/" "-" }}
        resources:
          limits:
            nvidia.com/gpu: 1
            memory: "10Gi"
            cpu: "2"
      restartPolicy: Never
  backoffLimit: 4
