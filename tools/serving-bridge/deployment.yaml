# Copyright (c) 2020 Cognizant Digital Business, Evolutionary AI. All rights reserved. Issued under the Apache 2.0 License.
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ default "tfx-serving-bridge" .Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: bridge-env
 namespace: {{ default "tfx-serving-bridge" .Namespace }}
data:
 LOGXI_FORMAT: "happy,maxcol=1024"
 LOGXI: "*=DBG"
 O11Y_KEY: {{ env "O11Y_KEY" | default .O11Y_KEY }}
 O11Y_DATASET: {{ env "O11Y_DATASET" | default .O11Y_DATASET }}
 AWS_ENDPOINT: {{ env "AWS_ENDPOINT" | default .AWS_ENDPOINT }}
 AWS_ACCESS_KEY: {{ env "AWS_ACCESS_KEY" | default .AWS_ACCESS_KEY }}
 AWS_SECRET_ACCESS_KEY: {{ env "AWS_SECRET_ACCESS_KEY" | default .AWS_SECRET_ACCESS_KEY }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bridge-account
  namespace: {{ default "tfx-serving-bridge" .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bridge-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bridge-role-bind
subjects:
- kind: ServiceAccount
  name: bridge-account
  namespace: {{ default "tfx-serving-bridge" .Namespace }}
roleRef:
  kind: ClusterRole
  name: bridge-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: bridge-deployment
 namespace: {{ default "tfx-serving-bridge" .Namespace }}
 labels:
   app: bridge
spec:
 progressDeadlineSeconds: 360
 selector:
   matchLabels:
     app: bridge
 replicas: 1
 strategy:
   type: RollingUpdate
 template:
   metadata:
     labels:
       app: bridge
   spec:
      serviceAccountName: bridge-account
      automountServiceAccountToken: true
      containers:
      - name: bridge
        envFrom:
        - configMapRef:
            name: bridge-env
        env:
          - name: K8S_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: {{ .Image }}
        imagePullPolicy: Always
        resources:
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
          - name: podinfo
            mountPath: /etc/podinfo
            readOnly: false
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "namespace"
                fieldRef:
                  fieldPath: metadata.namespace
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
      nodeSelector:
        beta.kubernetes.io/os: linux
