FROM ubuntu:16.04

MAINTAINER karlmutch@gmail.com

ENV LANG C.UTF-8

ENV CUDA_8_DEB "https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb"
ENV CUDA_9_DEB "https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64-deb"
ENV CUDA_PACKAGE_VERSION 8-0
ENV CUDA_FILESYS_VERSION 8.0
ENV NVIDIA_VERSION 384

RUN apt-get -y update && apt-get -y upgrade

RUN \
    apt-get -y install apt-transport-https software-properties-common wget openssl ssh curl jq apt-utils && \
    apt-get -y install make git gcc && apt-get clean

RUN cd /tmp && \
    wget -q -O /tmp/cuda_8.deb ${CUDA_8_DEB} && \
    dpkg -i /tmp/cuda_8.deb && \
    apt-get -y update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends nvidia-cuda-dev cuda-nvml-dev-${CUDA_PACKAGE_VERSION} && \
    rm /tmp/cuda*.deb && \
    apt-get clean

    #wget --quiet -O /tmp/cuda_9.deb ${CUDA_9_DEB} && \
    #dpkg -i /tmp/cuda_9.deb && \
    #    apt-key add /var/cuda-repo-9-0-local/7fa2af80.pub && \
    #apt-get -y update && \
    #DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends cuda-runtime-9-2 && \
    #rm /tmp/cuda*.deb

RUN \
    ln -s /usr/local/cuda-${CUDA_FILESYS_VERSION} /usr/local/cuda && \
    ln -s /usr/local/cuda/targets/x86_64-linux/include /usr/local/cuda/include && \
    ln -s /usr/lib/nvidia-${NVIDIA_VERSION} /usr/lib/nvidia && \
    apt-get clean && \
    apt-get autoremove


ENV GO_VERSION 1.11

RUN mkdir -p /project/go && \
    mkdir -p /project/src/github.com/SentientTechnologies && \
    cd /project && \
    wget -q -O /tmp/go.tgz https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz && \
    tar xzf /tmp/go.tgz && \
    rm /tmp/go.tgz

RUN mkdir -p /project/.local/bin && \
    wget -q -O /project/.local/bin/minio https://dl.minio.io/server/minio/release/linux-amd64/minio && \
    chmod +x /project/.local/bin/minio

# Install RabbitMQ, originally from https://github.com/dockerfile/rabbitmq/blob/master/Dockerfile
RUN wget -q -O - 'https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc' | apt-key add - && \
    echo "deb https://dl.bintray.com/rabbitmq/debian xenial main erlang" | tee /etc/apt/sources.list.d/bintray.rabbitmq.list && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server && \
    rabbitmq-plugins enable rabbitmq_management && \
    echo "[{rabbit, [{loopback_users, []}]}]." > /etc/rabbitmq/rabbitmq.config && \
    mkdir -p /data

ENV RABBITMQ_LOG_BASE /data/log
ENV RABBITMQ_MNESIA_BASE /data/mnesia

ENV GOPATH=/project
ENV PATH=$GOPATH/bin:$PATH
ENV PATH=$PATH:/project/.local/bin:/project/go/bin
ENV GOROOT=/project/go

ARG RUNNER_BUILD_LOG
ENV RUNNER_BUILD_LOG ${RUNNER_BUILD_LOG}

ENV LOGXI='*=INF'
ENV LOGXI_FORMAT='happy,maxcol=1024'

WORKDIR /project/src/github.com/SentientTechnologies

RUN mkdir $GOPATH/bin && \
    (curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh) && \
    git config --global url."git://github.com".insteadOf "https://github.com" && \
    go get github.com/karlmutch/enumer

CMD /bin/bash -c '(git clone https://github.com/SentientTechnologies/studio-go-runner.git && cd studio-go-runner && git checkout $GIT_BRANCH && git branch && dep ensure && go generate ./internal/types && go run build.go -r -dirs=internal && go run build.go -r -dirs=cmd) 2>&1 | tee "$RUNNER_BUILD_LOG" && ls -alcrt && pwd && echo "$RUNNER_BUILD_LOG"'

# Done last to prevent lots of disruption when bumping versions
LABEL vendor="Sentient Technologies INC Open Source" \
      ai.sentient.module.version={{.duat.version}} \
      ai.sentient.module.name={{.duat.module}}
