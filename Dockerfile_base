FROM ubuntu:18.04

MAINTAINER karlmutch@gmail.com

ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND noninteractive

ENV CUDA_PACKAGE_VERSION 10-1
ENV CUDA_FILESYS_VERSION 10.1
ENV NVIDIA_VERSION 440

RUN apt-get update && \
    apt-get install -y locales && \
    apt-get install -y language-pack-en && \
    update-locale "en_US.UTF-8" && \
    apt-get install -y --no-install-recommends ca-certificates apt-transport-https apt-utils && \
    apt-get install -y --no-install-recommends openssl ssh wget curl lshw jq htop vim pkg-config unzip gnupg2 && \
    apt-get install -y --no-install-recommends libopenblas-base && \
    apt-get -y upgrade && \
    apt-get clean

RUN mkdir /usr/lib/nvidia && \
    cd /tmp && \
    apt-get install -y freeglut3 freeglut3-dev libxi-dev libxmu-dev && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
    wget -q -O /tmp/cuda.deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.1.243-1_amd64.deb && \
    dpkg -i /tmp/cuda.deb && \
    apt-get -y update

RUN apt-get -y install --no-install-recommends nvidia-cuda-dev && \
    apt-get -y install --no-install-recommends cuda-nvml-dev-${CUDA_PACKAGE_VERSION} && \
    apt-get clean

RUN \
    ls /usr/lib | grep nvidia && \
    ln -s /usr/local/cuda-${CUDA_FILESYS_VERSION} /usr/local/cuda && \
    ln -s /usr/local/cuda/targets/x86_64-linux/include /usr/local/cuda/include && \
    ln -s /usr/lib/nvidia-${NVIDIA_VERSION}/libnvidia-ml.so /usr/lib/nvidia/libnvidia-ml.so && \
    ln -s /usr/lib/nvidia-${NVIDIA_VERSION}/libnvidia-ml.so.1 /usr/lib/nvidia/libnvidia-ml.so.1 && \
    ln -s /usr/lib/nvidia-${NVIDIA_VERSION}/libnvidia-ml.so.${NVIDIA_VERSION}.33.01 /usr/lib/nvidia/libnvidia-ml.so.${NVIDIA_VERSION}.33.01 && \
    apt-get -y install --no-install-recommends libcuinj64-9.1 && \
    rm /tmp/cuda*.deb && \
    apt-get -y autoclean && \
    apt-get -y autoremove && \
    apt-get clean

# Install the runtime components for nvidia

RUN \
    rm -rf /var/lib/apt/lists/* && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    apt-get update


RUN apt-get install -y --no-install-recommends \
        cuda-cudart-10-0=10.0.130-1 \
        cuda-cufft-10-0 \
        cuda-curand-10-0 \
        cuda-cusolver-10-0 \
        cuda-cusparse-10-0 \
        cuda-libraries-10-0=10.0.130-1 \
        cuda-cublas-10-0=10.0.130-1 \
        cuda-runtime-10-0

RUN apt-get install -y --no-install-recommends \
        cuda-cudart-10-1 \
        cuda-cufft-10-1 \
        cuda-curand-10-1 \
        cuda-cusolver-10-1 \
        cuda-cusparse-10-1 \
        cuda-libraries-10-1 \
        libcublas10=10.2.1.243-1

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/lib/nvidia

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=10.1"

# Pick up some TF dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        libcudnn7=7.6.4.38-1+cuda10.1  \
        libcudnn7-dev=7.6.4.38-1+cuda10.1 \
        libhdf5-serial-dev \
        libpng-dev \
        libzmq3-dev \
        && \
    apt-get clean && \
    apt-get autoremove


RUN apt-get install -y libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev \
    libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl \
    libopenblas-base libopenblas-dev git build-essential

RUN \
    curl https://pyenv.run | /bin/bash && \
    export PATH=$HOME/.pyenv/bin:$PATH && \
    echo "export PATH=\"$HOME/.pyenv/bin:$PATH\"" >> $HOME/.bashrc && \
    echo "eval \"\$(pyenv init -)\"" >> $HOME/.bashrc && \
    echo "eval \"\$(pyenv virtualenv-init -)\"" >> $HOME/.bashrc && \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    pyenv install --list | grep " 3\.[5678]" && \
    pyenv install 3.8.3 && \
    pyenv install 3.7.6 && \
    pyenv install 3.6.10 && \
    pyenv install 3.5.9 && \
    pyenv global 3.6.10

ENV PATH /root/.pyenv/bin:$PATH

RUN \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    which python3 && \
    which pip3 && \
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3 get-pip.py pip==20.1 setuptools==44.0.0 wheel==0.33.6 && \
    pip3 install pyopenssl cryptography --upgrade

RUN apt-get -y install libssl-dev libcurl4-openssl-dev libsm6 libxrender-dev libxext-dev libopenblas-base libopenblas-dev && \
    eval "$(pyenv init -)" && \
    eval "$(pyenv virtualenv-init -)" && \
    pip3 install tensorflow-gpu==1.13.1 && \
    pip3 install tensorflow-gpu==1.14.0 && \
    pip3 install tensorflow-gpu==1.15.2 && \
    apt-get clean

# Will be overitten by other images deriving from this base image
CMD ["/bin/bash"]

LABEL vendor="Cognizant, AI&A" \
      registry.version=0.0.5 \
      registry.repo=leafai/studio-go-runner-dev-base \
      registry.base=studio-go-runner-dev-base
